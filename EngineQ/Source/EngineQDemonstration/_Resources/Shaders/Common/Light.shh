const int MaxLights = 4;

struct Light
{
	vec3 position;
	vec3 ambient;
	vec3 diffuse;
	vec3 specular;
	
	mat4 lightMatrix;

	float distance;
	
	bool castsShadows;
	float farPlane;
};

uniform Light lights[MaxLights];
uniform int lightCount;
uniform sampler2D lights_q_0_q_DirectionalShadowMap;
uniform sampler2D lights_q_1_q_DirectionalShadowMap;
uniform sampler2D lights_q_2_q_DirectionalShadowMap;
uniform sampler2D lights_q_3_q_DirectionalShadowMap;

uniform samplerCube lights_q_0_q_PointShadowMap;
uniform samplerCube lights_q_1_q_PointShadowMap;
uniform samplerCube lights_q_2_q_PointShadowMap;
uniform samplerCube lights_q_3_q_PointShadowMap;

/*
sampler2D GetDirectionalLightSampler(int index)
{
	if(index==0) return lights_q_0_q_DirectionalShadowMap;
	if(index==1) return lights_q_1_q_DirectionalShadowMap;
	if(index==2) return lights_q_2_q_DirectionalShadowMap;
	if(index==3) return lights_q_3_q_DirectionalShadowMap;
}

samplerCube GetPointLightSampler(int index)
{
	if(index==0) return lights_q_0_q_PointShadowMap;
	if(index==1) return lights_q_1_q_PointShadowMap;
	if(index==2) return lights_q_2_q_PointShadowMap;
	if(index==3) return lights_q_3_q_PointShadowMap;
}
*/